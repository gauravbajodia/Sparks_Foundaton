# -*- coding: utf-8 -*-
"""Task_1(Supervised Learning).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T8Q5C7-aoCeVTQZ2YvYNrWBB5bZ0azjS

# Importing Libraries
"""

# Commented out IPython magic to ensure Python compatibility.

import numpy as np
import pandas as pd
# %matplotlib inline
import matplotlib.pyplot as plt
from google.colab import files

"""# Loading Datasets"""

uploaded = files.upload()
df = pd.read_csv(r"student_scores.csv")
print("Data imported successfully")

df.head()

df.describe()

"""# Plotting the distribution of scores








"""

plt.scatter(df['Hours'],df['Scores'],color='green')  
plt.title('Hours vs Percentage')  
plt.xlabel('Hours Studied')  
plt.ylabel('Percentage Score')  
plt.show()

"""# Preparing the data"""

X = df.iloc[:, :-1].values  
y = df.iloc[:, 1].values

"""# Splitting the data into Training and Testing Sets




"""

from sklearn.model_selection import train_test_split  
X_train, X_test, y_train, y_test = train_test_split(X, y,test_size=0.2, random_state=0)

"""# Training the Model"""

from sklearn.linear_model import LinearRegression  
regressor = LinearRegression()  
regressor.fit(X_train, y_train) 

print("Training Model completed.")

"""# Plotting the regression line and test data

"""

line = regressor.coef_*X+regressor.intercept_


plt.scatter(X, y,color='blue')
plt.plot(X, line);
plt.show()

"""#Making Predictions"""

print(X_test) 
y_pred = regressor.predict(X_test) 
print(y_pred)

"""# Comparing Actual vs Predicted"""

df1 = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})  
df1

"""#Testing with own data"""

hours = [[9.25]]
own_pred = regressor.predict(hours)
print("No of Hours = {}".format(hours))
print("Predicted Score = {}".format(own_pred[0]))

"""#Evaluating The model"""

from sklearn import metrics  
print('Mean Absolute Error:',metrics.mean_absolute_error(y_test, y_pred))